# Default values for karpenter-integration.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

createFlowSchemas: true # creates karpenter namespace FlowSchema resources, it is needed (for putting karpenter into higher-priority FlowSchemas) in case we have karpenter installed in a different namespace than the default "kube-system", for more info look https://karpenter.sh/docs/getting-started/getting-started-with-karpenter/#preventing-apiserver-request-throttling
karpenterServiceAccount: karpenter # service account name in karpenter operator namespace which attached/used by karpenter pods for cloud operations authentication
karpenterNamespace: karpenter # the namespace where karpenter operator/helm have been installed

ec2NodeClasses: {} # EC2NodeClass object configs, to enable AWS specific settings, each NodePool must reference an NodeClass, for more info look https://karpenter.sh/docs/concepts/nodeclasses/
## example of how to create EC2NodeClass resources
# ec2NodeClasses:
#   my-node-class:
#     amiFamily: AL2
#     amiSelectorTerms: # aws ami which will be used for nodes
#       - id: ami-0e7df911d76024f90
#     role: <eks-node-iam-role-name> # iam identity role name nodes should assume (optional)
#     securityGroupSelectorTerms: # vpc security group nodes should get, usually this is same group used/created for eks standard nodes
#     - tags:
#         karpenter.sh/discovery: test-cluster-with-karpenter
#     subnetSelectorTerms: # the vpc subnets used for nodes, usually this is same list that used for eks
#     - id: subnet-<subnet-uid-1>
#     - id: subnet-<subnet-uid-2>
#     - id: subnet-<subnet-uid-3>
nodePools: {} # NodePool to create, this is map of <pool-name>:<pool-spec-object>, for more info look https://karpenter.sh/docs/concepts/nodepools/
## example of how to create NodePool resources
# nodePools:
#   my-node-pool:
#     template:
#       spec:
#         expireAfter: Never
#         nodeClassRef:
#           group: karpenter.k8s.aws
#           kind: EC2NodeClass
#           name: my-node-class # this is name of EC2NodeClass, an node-class can be referenced by multiple node-pools
#         requirements:
#         - key: karpenter.k8s.aws/instance-cpu
#           operator: Lt
#           values:
#           - "5"
#         - key: karpenter.k8s.aws/instance-cpu
#           operator: Gt
#           values:
#           - "1"
#         - key: karpenter.k8s.aws/instance-memory
#           operator: Lt
#           values:
#           - "90000"
#         - key: karpenter.k8s.aws/instance-memory
#           operator: Gt
#           values:
#           - "1000"
#         - key: karpenter.k8s.aws/instance-generation
#           operator: Gt
#           values:
#           - "2"
#         - key: kubernetes.io/arch
#           operator: In
#           values:
#           - amd64
#         - key: karpenter.sh/capacity-type
#           operator: In
#           values:
#           - spot
#           - on-demand
#     disruption:
#       budgets:
#       - nodes: 10%
#       consolidateAfter: 1m
#       consolidationPolicy: WhenEmptyOrUnderutilized
#     limits:
#       cpu: 10
#     weight: 1

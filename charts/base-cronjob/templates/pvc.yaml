{{- range $job := .Values.jobs }}
{{- if $job.storage -}}
{{ range $storage := $job.storage }}
{{- if ($storage.persistentVolume).create -}}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ ($storage.persistentVolume).name | default $storage.persistentVolumeClaimName }}
  labels:
    app-name: {{ $job.name | quote }}
spec:
  capacity:
    storage: {{ $storage.requestedSize | default "1Gi" }}
  accessModes:
    {{- toYaml $storage.accessModes | nindent 4 }}
  storageClassName: {{ $storage.className | default "" }}
  claimRef: # To ensure no other PVCs can claim this PV
    namespace: {{ $.Release.Namespace }}
    name: {{ $storage.persistentVolumeClaimName }}
  {{- with ($storage.persistentVolume).csi }}
  csi: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with ($storage.persistentVolume).mountOptions }}
  mountOptions: {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $storage.persistentVolumeClaimName }}
  labels:
    app-name: {{ $job.name | quote }}
  {{- if $storage.keepPvc }}
  annotations:
    "helm.sh/resource-policy": keep
  {{- end }}
spec:
  accessModes:
    {{- toYaml $storage.accessModes | nindent 4 }}
  volumeMode: {{ $storage.volumeMode | default "Filesystem" }}
  resources:
    requests:
      storage: {{ $storage.requestedSize }}
  {{- with $storage.className }}
  storageClassName: {{ . }}
  {{- end }}
  {{ if $storage.enableDataSource}}
  dataSource:
    kind: PersistentVolumeClaim
    name: {{ $storage.persistentVolumeClaimName }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

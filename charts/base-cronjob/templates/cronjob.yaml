{{- range $job := .Values.jobs }}
{{- $jobImage := $job.image | default $.Values.default.image }}
{{- $jobRegistry := $jobImage.registry | default $.Values.default.image.registry }}
{{- $jobRepository := $jobImage.repository | default $.Values.default.image.repository }}
{{- $jobTag := $jobImage.tag | default $.Values.default.image.tag }}
{{- $image := print ((empty $jobRegistry)| ternary $jobRegistry (print $jobRegistry "/") ) $jobRepository ":" $jobTag }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $job.name | quote }}
  {{- with $job.annotations }}
  annotations:
    {{- toYaml . | nindent 8 }}
  {{- end }}
  {{- if $job.labels }}
  labels:
    {{- range $key, $value := $job.labels }}
    {{ $value.name }}: {{ $value.value | quote }}
    {{- end }}
    app-name: {{ $job.name | quote }}
  {{- end }}
spec:
  schedule: {{ $job.schedule | quote }}
  concurrencyPolicy: {{ $job.concurrencyPolicy }}
  {{- with $job.startingDeadlineSeconds }}
  startingDeadlineSeconds: {{ . }}
  {{- end }}
  {{- with $job.activeDeadlineSeconds }}
  activeDeadlineSeconds: {{ . }}
  {{- end }}
  {{- with $job.timeZone }}
  timeZone: {{ . }}
  {{- end }}
  jobTemplate:
    spec:
      template:
        metadata:
          {{- if $job.labels }}
          labels:
            {{- range $key, $value := $job.labels }}
            {{ $value.name }}: {{ $value.value | quote }}
            {{- end }}
            app-name: {{ $job.name | quote }}
          {{- end }}
          annotations:
            configmap: "{{ $job.config | toYaml | sha256sum | trunc 8 }}"
            {{- with $job.podAnnotations }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
        spec:
          {{- with ($job.serviceAccount).name }}
          serviceAccountName: {{ . | quote }}
          {{- end }}
          {{- with $job.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $job.restartPolicy }}
          restartPolicy: {{ . | quote }}
          {{- end }}
          containers:
            - name: {{ $job.name | quote }}
              image: {{ $image | quote }}
              imagePullPolicy: {{ $job.imagePullPolicy | default "IfNotPresent" | quote }}
              {{- if $job.command }}
              command:
                {{- range $cmd := $job.command }}
                - {{ $cmd }}
                {{- end }}
              {{- end }}
              {{- if $job.args }}
              args:
                {{- range $args := $job.args }}
                - {{ $args }}
                {{- end }}
              {{- end }}
              {{ if $job.resources }}
              resources:
                requests:
                  cpu: {{ $job.resources.requests.cpu }}
                  memory: {{ $job.resources.requests.memory }}
                limits:
                  cpu: {{ $job.resources.limits.cpu }}
                  memory: {{ $job.resources.limits.memory }}
              {{ end }}
              env:
              {{- range $env := $job.env }}
                - name: {{ $env.name | quote }}
                  value: {{ $env.value | quote }}
              {{- end }}
                {{- range $secret := $job.secrets }}
                {{- if ne (kindOf $secret) "string" }}
                {{- range $map_key,$map_value := $secret }}
                - name: {{ $map_key }}
                  valueFrom:
                    secretKeyRef:
                      key: {{ $map_value.key }}
                      name: {{ $map_value.from }}
                {{- end }}
                {{- end }}
                {{- end }}
              envFrom:
              {{- $config := (default dict $job.config) }}
              {{- if and (kindIs "map" $config) (hasKey $config "enabled") (eq $config.enabled true) }}
                - configMapRef:
                    name: {{ $job.name | quote }}
              {{- with $job.envFrom }}
                {{- toYaml . | nindent 16 }}
              {{- end }}
              {{- end }}
                {{- range $configMapRef := $job.configMapRefs }}
                - configMapRef:
                    name: {{ $configMapRef }}
                {{- end }}
              volumeMounts:
            {{- range $index, $element := $job.volumes }}
                - name: {{ coalesce $element.name (add $index 1) }}
                  mountPath: {{ $element.mountPath }}
                  readOnly: {{ $element.readOnly | default false }}
                  {{- with $element.subPath }}
                  subPath: {{ . }}
                  {{- end }}
            {{- end }}
            {{- with $job.lifecycle }}
              lifecycle:
                {{- toYaml . | nindent 16 }}
            {{- end }}
          {{- with $job.nodeSelector }}
          nodeSelector:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{- with $job.affinity }}
          affinity:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{- with $job.tolerations }}
          tolerations:
{{ toYaml . | indent 12 }}
          {{- end }}
      {{- if $job.volumes }}
          volumes:
        {{- range $index, $element := $job.volumes }}
            - name: {{ coalesce $element.name (add $index 1) }}
              {{- if $element.configMap }}
              configMap:
                name: {{ $element.configMap.name | default $job.name }}
              {{- if $element.configMap.defaultMode }}
                defaultMode: {{ $element.configMap.defaultMode }}
              {{- end }}
              {{- end }}
              {{- if $element.persistentVolumeClaim }}
              persistentVolumeClaim:
                claimName: {{ $element.persistentVolumeClaim.claimName }}
                readOnly: {{ $element.persistentVolumeClaim.readOnly | default false }}
              {{- end }}
              {{- with $element.secret }}
              secret:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              {{- if or (not (empty $element.emptyDir)) (eq (toYaml $element.emptyDir) "{}") }}
              emptyDir:
                {{- toYaml $element.emptyDir | nindent 16 }}
              {{- end }}
              {{- with $element.hostPath }}
              hostPath:
                {{- toYaml . | nindent 16 }}
              {{- end }}
          {{- end }}
{{- end }}
{{- end }}

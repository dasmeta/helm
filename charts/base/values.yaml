# Default values for datalertio.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is  the chart appVersion.
  tag: 1.21

# Init containers
# initContainers:
#   - name: config
#     args:
#     - /config.json
#     - /test/config.json
#     secrets:
#       - CLIENT_ID:
#           from: client-market
#           key: client_id
#       - AUTH_TOKEN:
#           from: auth-token
#           key: token
#     image:
#       repository: nginx
#       pullPolicy: IfNotPresent
#       tag: latest
#     volumes:
#       - mountPath: /config.json
#         name: config-json
#         subPath: config.json

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  enabled: true
  name: http
  type: NodePort
  port: 80
  protocol: TCP
  extraPorts: []
  ## here is sample how you can set/enable additional ports on service
  # extraPorts:
  #   - port: 8080
  #     targetPort: 8080
  #     protocol: TCP
  #     name: http-second

# The ingress class setting by annotation is deprecated and we have setIngressClassByField option for backward compatibility for now, check doc here https://kubernetes.io/docs/concepts/services-networking/ingress/#deprecated-annotation
# have 'setIngressClassByField: true' to set ingress class by spec.ingressClassName,
# we seems cant have both "kubernetes.io/ingress.class" and spec.ingressClassName set at once, so there is check(for alb, application-gateway and cce the check is missing for now) to not set annotation if we set ingress class fy field
# TODO: have ingress class setting by field used always and remove deprecated "kubernetes.io/ingress.class" annotations
setIngressClassByField: false

# it allows also to pass list of ingresses in following form
# NOTE: in case of list it will auto attach uniq identify numbers to ingress names starting from second item, you can use nameSuffix field to set custom suffix instead of number
ingress:
  enabled: false
  class: alb
  annotations: {}
  hosts:
    - host: host.name.com
      paths:
        - path: /*
          backend:
            serviceName: ssl-redirect
            servicePort: use-annotation
        - backend:
            serviceName: base
            servicePort: 80
          path: /*
  tls: []
# example how can be ingress list passed
# ingress:
#   - class: nginx
#     hosts:
#       - host: host.name.com
#         paths:
#           - backend:
#               serviceName: base
#               servicePort: 80
#             path: /*
#   - class: nginx-second
#     nameSuffix: -second
#     hosts:
#       - host: host-second.name.com
#         paths:
#           - path: /*
#             backend:
#               serviceName: base
#               servicePort: 8080

secrets: []
secretsDefaultEngine: "ExternalSecrets"
# secrets:
#   - external-secret-1
#   - external-secret-2
#   - external-secret-3
#   - external-secret-4
#   - DATABASE:
#       from: helm-test-secret
#       key: database
#   - ENDPOINT:
#       from: helm-test-secret
#       key: endpoint
#   - PASSWORD:
#       from: helm-test-secret
#       key: password
#   - SPRING_DATASOURCE_URL:
#       from: helm-test-secret
#       key: spring_datasource_url
#   - USERNAME:
#       from: helm-test-secret
#       key: username

extraContainer: {}

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config: {}

containerPort: 80

livenessProbe:
  {}
  # failureThreshold: 3
  # httpGet:
  #   path: /
  #   port: 80
  #   scheme: HTTP
  # initialDelaySeconds: 60
  # periodSeconds: 5
  # successThreshold: 1
# timeoutSeconds: 1

readinessProbe:
  {}
  # httpGet:
  #   path: /
  #   port: http
  # initialDelaySeconds: 60
# periodSeconds: 5

envFrom:
  secret:

startupProbe:
  {}
  # httpGet:
  #   path: /
#   port: http

storage:
  {}
  # - persistentVolumeClaimName: "pvc-1"
  #   accessModes:
  #     - ReadWriteMany
  #   className: efs-sc
  #   requestedSize: 2Gi
  #   enableDataSource: false
  # - persistentVolumeClaimName: pvc-2
  #   accessModes:
  #     - ReadWriteMany
  #   className: efs-sc-root
  #   requestedSize: "2Gi"
  #   enableDataSource: false

deployment: {}

env: dev
product: application

pdb:
  enabled: false
  minAvailable: 1
  pdbName:

serviceMonitor:
  enabled: false
  interval: 30s
  targetPort: 80
  path: /metrics

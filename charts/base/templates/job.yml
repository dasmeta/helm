{{- if .Values.job.image -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.job.name | default (include "base.fullname" .) }}
  labels:
    {{- include "base.labels" . | nindent 4 }}
    {{- if .Values.job.labels }}
    {{- range $key, $value := .Values.job.labels }}
    {{ $value.name }}: {{ $value.value | quote}}
    {{- end }}
    {{- end }}
  annotations:
    {{- if .Values.job.annotations }}
    {{- toYaml .Values.job.annotations | nindent 4 }}
    {{- end }}
spec:
  template:
    metadata:
      annotations:
        configmap: "{{ .Values.config | toYaml | sha256sum | trunc 8 }}"
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "base.selectorLabels" . | nindent 8 }}
        {{- if .Values.job.labels }}
        {{- range $key, $value := .Values.job.labels }}
        {{ $value.name }}: {{ $value.value | quote }}
        {{- end }}
        {{- end }}
    spec:
      {{- if .Values.job.serviceAccount.create }}
      serviceAccountName: {{ .Values.job.name }}
      {{- end }}
      containers:
      - name:  {{ .Values.job.name | default (include "base.fullname" .) }}
        image: "{{ .Values.job.image.repository }}:{{ .Values.job.image.tag | default .Chart.AppVersion }}"
        {{- if .Values.job.command }}
        command:
          {{  toYaml .Values.job.command | nindent 12 }}
        {{- end }}
        {{- if or .Values.job.extraEnv .Values.job.secrets}}
        env:
        {{- range $key, $value := .Values.job.extraEnv }}
        - name: {{ $key | quote}}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $secret := .Values.job.secrets }}
        {{- if ne (kindOf $secret) "string" }}
        {{- range $map_key,$map_value := $secret }}
        - name: {{ $map_key }}
          valueFrom:
            secretKeyRef:
              key: {{ $map_value.key }}
              name: {{ $map_value.from }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .Values.job.envFrom }}
        envFrom:
          {{- if .Values.job.envFrom.configMap }}
          - configMapRef:
              name: {{ .Values.job.envFrom.configMap }}
          {{- end }}
          {{- if .Values.job.envFrom.secret }}
          - secretRef:
              name: {{ .Values.job.envFrom.secret }}
              optional: true
          {{- end }}
        {{- end }}
        {{- if .Values.job.volumes }}
        volumeMounts:
        {{- if .Values.job.additionalvolumeMounts }}
          {{- toYaml .Values.job.additionalvolumeMounts | nindent 10 }}
        {{- end }}
          {{- range $index, $element := .Values.job.volumes }}
          - name: {{ coalesce $element.name (add $index 1) }}
            mountPath: {{ $element.mountPath }}
            readOnly: {{ $element.readOnly | default false }}
          {{- end }}
        {{- end }}
      {{- if .Values.deployment.volumes }}
      volumes:
        {{- range $index, $element := .Values.deployment.volumes }}
        - name: {{ coalesce $element.name (add $index 1) }}
          {{- if $element.configMap }}
          configMap:
            name: {{ $element.configMap.name }}
          {{- end }}
          {{- if $element.persistentVolumeClaim }}
          persistentVolumeClaim:
            {{- if $element.persistentVolumeClaim.claimName }}
            claimName: {{ $element.persistentVolumeClaim.claimName }}
            {{- else }}
            claimName: {{ include "base.fullname" $ }}
            {{- end }}
          {{- end }}
          {{- if $element.secret }}
          secret:
            secretName: {{ $element.secret.secretName }}
          {{- end }}
          {{- if $element.emptyDir }}
          emptyDir:
            medium: {{ $element.emptyDir.medium }}
            sizeLimit: {{ $element.emptyDir.sizeLimit }}
          {{- end }}
          {{- if $element.hostPath }}
          hostPath:
            path: {{ $element.hostPath.path }}
            type: {{ $element.hostPath.type }}
          {{- end }}
      {{- end }}
      {{- end }}
      restartPolicy: Never
  backoffLimit: 4
{{- end }}

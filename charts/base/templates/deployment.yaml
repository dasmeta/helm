{{ $baseFullName := (include "base.fullname" .) }}
{{ $volumes := concat .Values.volumes ((.Values.deployment).volumes | default (list)) (fromYaml (include "base.configMapVolumes" $)).data (fromYaml (include "base.secretVolumes" $)).data }}
{{ $additionalVolumeMounts := (coalesce .Values.additionalVolumeMounts (.Values.deployment).additionalvolumeMounts) }}
{{ $defaultLifecycle := ternary (unset (deepCopy .Values.defaultLifecycle) "enabled" ) (dict) .Values.defaultLifecycle.enabled }}
{{ $lifecycle := merge (coalesce .Values.lifecycle (.Values.deployment).lifecycle) $defaultLifecycle }}
{{ $topologySpreadConstraints := concat (ternary (list (dict "maxSkew" .Values.spread.maxSkew "topologyKey" "kubernetes.io/hostname" "whenUnsatisfiable" .Values.spread.whenUnsatisfiable "labelSelector" (dict "matchLabels" (include "base.selectorLabels" . | fromYaml)))) (list) .Values.spread.enabled ) .Values.topologySpreadConstraints }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "base.fullname" . }}
  labels:
    {{- include "base.labels" . | nindent 4 }}
    {{- if .Values.labels }}
    {{- range $key, $value := .Values.labels }}
    {{ $value.name }}: {{ $value.value | quote}}
    {{- end }}
    {{- end }}
  {{- if .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.minReadySeconds}}
  minReadySeconds: {{ .Values.minReadySeconds }}
  {{- end }}
  {{- if .Values.revisionHistoryLimit}}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- end }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "base.selectorLabels" . | nindent 6 }}
      {{- if .Values.matchLabels }}
      {{- range $key, $value := .Values.matchLabels }}
      {{ $value.name }}: {{ $value.value | quote}}
      {{- end }}
      {{- end }}
  {{- if .Values.strategy }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        configmap: {{ include "base.configs" $ | sha256sum | trunc 8 | quote }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "base.selectorLabels" . | nindent 8 }}
        {{- if .Values.labels }}
        {{- range $key, $value := .Values.labels }}
        {{ $value.name }}: {{ $value.value | quote }}
        {{- end }}
        {{- end }}
    spec:
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "base.serviceAccountName" . }}
      {{- if .Values.initContainers }}
      initContainers:
       {{- range $initContainer := (ternary .Values.initContainers (list .Values.initContainers) (kindIs "slice" .Values.initContainers)) }}
        - name: {{ $initContainer.name }}
          image: "{{ $initContainer.image.repository }}:{{ $initContainer.image.tag }}"
          imagePullPolicy: {{ $initContainer.image.pullPolicy }}
          {{- with $initContainer.workingDir }}
          workingDir: {{ . | quote }}
          {{- end }}
          {{- with $initContainer.command }}
          command: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with $initContainer.args }}
          args: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- if or $initContainer.extraEnv $initContainer.secrets}}
          env:
          {{- range $key, $value := $initContainer.extraEnv }}
          - name: {{ $key | quote}}
            value: {{ $value | quote }}
          {{- end }}
          {{- range $secret := $initContainer.secrets }}
          {{- if ne (kindOf $secret) "string" }}
          {{- range $map_key,$map_value := $secret }}
          - name: {{ $map_key }}
            valueFrom:
              secretKeyRef:
                key: {{ $map_value.key }}
                name: {{ $map_value.from }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if $initContainer.envFrom }}
          envFrom:
            {{- toYaml $initContainer.envFrom | nindent 12 }}
          {{- end }}
          {{- if $initContainer.volumes }}
          volumeMounts:
            {{- range $index, $element := $initContainer.volumes }}
            - name: {{ coalesce $element.name (add $index 1) }}
              mountPath: {{ $element.mountPath }}
              readOnly: {{ $element.readOnly | default false }}
              {{- if $element.subPath }}
              subPath: {{ $element.subPath }}
              {{- end }}
            {{- end }}
          {{- end }}
      {{- end }}
      {{- end }}
      {{- with $topologySpreadConstraints }}
      topologySpreadConstraints: {{ toYaml . | nindent 6 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $baseFullName }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with $.Values.workingDir }}
          workingDir: {{ . | quote }}
          {{- end }}
          {{- with $.Values.command }}
          command: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with $.Values.args }}
          args: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.extraEnv .Values.secrets}}
          env:
            {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key | quote}}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $secret := .Values.secrets }}
            {{- if ne (kindOf $secret) "string" }}
            {{- range $map_key,$map_value := $secret }}
            {{- if not (hasPrefix "/" $map_key) }}
            - name: {{ $map_key }}
              valueFrom:
                secretKeyRef:
                  key: {{ $map_value.key }}
                  name: {{ $map_value.from }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.service.enabled }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort | default 80 }}
              protocol: TCP
            {{- with .Values.extraPorts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            {{- if fromYaml (include "base.envConfigs" $) }}
            - configMapRef:
                name: {{ include "base.fullname" . }}
            {{- end }}
            {{- if .Values.externalConfigmap }}
            - configMapRef:
                name:  {{ .Values.externalConfigmap.name }}
            {{- end }}
            {{- if and (eq .Values.secretsDefaultEngine "ExternalSecrets") .Values.secrets }}
            - secretRef:
                name: {{ include "base.fullname" . }}
                optional: true
            {{- end }}
            {{- if .Values.envFrom.secret }}
            - secretRef:
                name: {{ .Values.envFrom.secret }}
                optional: true
            {{- end }}
          {{- if $volumes }}
          volumeMounts:
            {{- range $index, $element := $volumes }}
            {{- if or (eq $element.container nil) ( has $baseFullName (ternary $element.container (list $element.container) (kindIs "slice" $element.container))) }}
            - name: {{ coalesce $element.name (add $index 1) }}
              mountPath: {{ $element.mountPath }}
              {{- if $element.subPath }}
              subPath: {{ $element.subPath }}
              {{- end }}
              readOnly: {{ $element.readOnly | default false }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if $additionalVolumeMounts }}
            {{- toYaml $additionalVolumeMounts | nindent 12 }}
          {{- end }}
          {{- if $lifecycle }}
          lifecycle:
            {{- toYaml $lifecycle | nindent 12 }}
          {{- end }}
        {{- if .Values.extraContainer }}
        {{- range $extraContainer := (ternary .Values.extraContainer (list .Values.extraContainer) (kindIs "slice" .Values.extraContainer)) }}
        {{- $extraContainerName := $extraContainer.name }}
        - name: {{ $extraContainerName }}
          image: "{{ $extraContainer.image.repository }}:{{ $extraContainer.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $extraContainer.image.pullPolicy }}
          {{- with $extraContainer.workingDir }}
          workingDir: {{ . | quote }}
          {{- end }}
          {{- with $extraContainer.command }}
          command: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with $extraContainer.args }}
          args: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- if ($extraContainer.service).enabled }}
          ports:
            - name: http
              containerPort: {{ $extraContainer.containerPort | default 80 }}
              protocol: TCP
            {{- with $extraContainer.extraPorts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if or $extraContainer.extraEnv $extraContainer.secrets}}
          env:
          {{- range $key, $value := $extraContainer.extraEnv }}
          - name: {{ $key | quote}}
            value: {{ $value | quote }}
          {{- end }}
          {{- range $secret := $extraContainer.secrets }}
          {{- if ne (kindOf $secret) "string" }}
          {{- range $map_key,$map_value := $secret }}
          - name: {{ $map_key }}
            valueFrom:
              secretKeyRef:
                key: {{ $map_value.key }}
                name: {{ $map_value.from }}
          {{- end }}
          {{- end }}
          {{- end }}
        {{- end }}
          {{- if $extraContainer.livenessProbe }}
          livenessProbe:
            {{- toYaml $extraContainer.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if $extraContainer.readinessProbe }}
          readinessProbe:
            {{- toYaml $extraContainer.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if $extraContainer.startupProbe }}
          startupProbe:
            {{- toYaml $extraContainer.startupProbe | nindent 12 }}
          {{- end }}
          resources:
          {{- toYaml $extraContainer.resources | nindent 12 }}
          {{- if $extraContainer.envFrom }}
          envFrom:
            - configMapRef:
                name: {{ $extraContainer.name }}
            {{- if eq $extraContainer.secretsDefaultEngine "ExternalSecrets" -}}
            - secretRef:
                name: {{ $extraContainer.secretRef }}
                optional: true
            {{- end }}
          {{- end }}
          {{- if eq $extraContainer.secretsDefaultEngine "ExternalSecrets" }}
          - secretRef:
              name: {{ include "base.fullname" . }}
              optional: true
          {{- end }}
          {{- if $volumes }}
          volumeMounts:
            {{- range $index, $element := $volumes }}
            {{- if or ( has "extra" (ternary $element.container (list $element.container) (kindIs "slice" $element.container))) ( has $extraContainerName (ternary $element.container (list $element.container) (kindIs "slice" $element.container))) }}
            - name: {{ coalesce $element.name (add $index 1) }}
              mountPath: {{ $element.mountPath }}
              {{- if $element.subPath }}
              subPath: {{ $element.subPath }}
              {{- end }}
              readOnly: {{ $element.readOnly | default false }}
            {{- end }}
            {{- end }}
            {{- if $extraContainer.additionalVolumeMounts }}
            {{- toYaml $extraContainer.additionalVolumeMounts | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if (merge (coalesce $extraContainer.lifecycle ($extraContainer.deployment).lifecycle) $defaultLifecycle) }}
          lifecycle:
            {{- toYaml (merge (coalesce $extraContainer.lifecycle ($extraContainer.deployment).lifecycle) $defaultLifecycle) | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- end }}
      {{- if $volumes }}
      volumes:
        {{- range $index, $element := $volumes }}
        - name: {{ coalesce $element.name (add $index 1) }}
          {{- with $element.configMap }}
          configMap:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if $element.persistentVolumeClaim }}
          persistentVolumeClaim:
            claimName: {{ coalesce $element.persistentVolumeClaim.claimName (include "base.fullname" $) }}
            readOnly: {{ $element.persistentVolumeClaim.readOnly | default false }}
          {{- end }}
          {{- with $element.secret }}
          secret:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or (not (empty $element.emptyDir)) (eq (toYaml $element.emptyDir) "{}") }}
          emptyDir:
            {{- toYaml $element.emptyDir | nindent 12 }}
          {{- end }}
          {{- with $element.hostPath }}
          hostPath:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

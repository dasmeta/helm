{{- $externalSecretsData := concat (fromYaml (include "base.externalSecrets" .)).data (fromYaml (include "base.extraContainersExternalSecrets" .)).data -}}
{{- if and (eq .Values.secretsDefaultEngine "ExternalSecrets") $externalSecretsData -}}
{{ $fullName := include "base.fullname" .}}
{{- $product := .Values.product | default "default-product" -}}
{{- $env := .Values.env | default "default-env" -}}

apiVersion: {{ .Values.externalSecretsApiVersion }}
kind: ExternalSecret
metadata:
  name: {{ $fullName }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: {{ .Values.product }}-{{ .Values.env }}
    kind: {{ .Values.secretStoreKind | default "SecretStore" }}
  target:
    name: {{ $fullName }}
    creationPolicy: Owner
  data:
  {{- range $secret := $externalSecretsData }}
  - secretKey: {{ $secret.secretKey }}
    remoteRef:
      key: {{ default (print $.Values.product "/" $.Values.env "/" $fullName) $.Values.secretManagerName }}
      property: {{ $secret.property }}
  {{- end }}
{{- end }}
